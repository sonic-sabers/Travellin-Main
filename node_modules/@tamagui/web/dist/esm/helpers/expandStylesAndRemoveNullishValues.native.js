import { expandStyle } from "./expandStyle";
import { fixStyles } from "./expandStyles";
import { normalizeValueWithProperty } from "./normalizeValueWithProperty";
import { pseudoDescriptors } from "./pseudoDescriptors";
function expandStylesAndRemoveNullishValues(style, disableNormalize = !1) {
  const res = {};
  for (let key in style) {
    const prop = style[key];
    if (prop == null)
      continue;
    if (key in pseudoDescriptors) {
      res[key] = expandStylesAndRemoveNullishValues(prop, disableNormalize);
      continue;
    }
    const value = disableNormalize ? prop : normalizeValueWithProperty(prop, key), out = expandStyle(key, value);
    out ? Object.assign(res, Object.fromEntries(out)) : res[key] = value;
  }
  return fixStyles(res), res;
}
export {
  expandStylesAndRemoveNullishValues
};
//# sourceMappingURL=expandStylesAndRemoveNullishValues.js.map
